export const CATEGORIES = [
  "JavaScript Basics",
  "React",
  "Python",
  "Docker",
  "Django",
  "ES6+ Features",
  "DOM Manipulation",
  "Async Programming",
  "Object-Oriented JavaScript",
  "Functional Programming",
  "Error Handling",
  "Data Structures",
  "Algorithms",
  "Design Patterns",
  "Performance Optimization",
  "Testing",
  "Debugging",
  "Browser APIs",
  "Node.js",
  "Security",
  "Best Practices",
  "Frameworks",
  "Build Tools",
  "Package Management",
];

export const TECH_STACK_CATEGORIES = {
  JAVASCRIPT_BASICS: "JavaScript Basics",
  REACT: "React",
  PYTHON: "Python",
  DOCKER: "Docker",
  DJANGO: "Django",
  ES6_FEATURES: "ES6+ Features",
  DOM_MANIPULATION: "DOM Manipulation",
  ASYNC_PROGRAMMING: "Async Programming",
  OBJECT_ORIENTED_JAVASCRIPT: "Object-Oriented JavaScript",
  FUNCTIONAL_PROGRAMMING: "Functional Programming",
  ERROR_HANDLING: "Error Handling",
  DATA_STRUCTURES: "Data Structures",
  ALGORITHMS: "Algorithms",
  DESIGN_PATTERNS: "Design Patterns",
  PERFORMANCE_OPTIMIZATION: "Performance Optimization",
  TESTING: "Testing",
  DEBUGGING: "Debugging",
  BROWSER_APIS: "Browser APIs",
  NODE_JS: "Node.js",
  SECURITY: "Security",
  BEST_PRACTICES: "Best Practices",
  FRAMEWORKS: "Frameworks",
  BUILD_TOOLS: "Build Tools",
  PACKAGE_MANAGEMENT: "Package Management",
  FP: "fp",
};

export const CATEGORY_QUERY_PARAMS = {
  "JavaScript Basics": "javascript_basics",
  "ES6+ Features": "es6_features",
  "DOM Manipulation": "dom_manipulation",
  "Async Programming": "async_programming",
  "Object-Oriented JavaScript": "object_oriented_javascript",
  "Functional Programming": "functional_programming",
  "Error Handling": "error_handling",
  "Data Structures": "data_structures",
  Algorithms: "algorithms",
  "Design Patterns": "design_patterns",
  "Performance Optimization": "performance_optimization",
  Testing: "testing",
  Debugging: "debugging",
  "Browser APIs": "browser_apis",
  "Node.js": "node_js",
  Security: "security",
  "Best Practices": "best_practices",
  Frameworks: "frameworks",
  "Build Tools": "build_tools",
  "Package Management": "package_management",
  React: "react",
  Python: "python",
  Docker: "docker",
  Django: "django",
};

export const TOPICS = {
  "JavaScript Basics": [
    "Variables & Data Types",
    "Operators",
    "Control Flow",
    "Functions",
    "Arrays",
    "Objects",
    "Scope & Hoisting",
    "this Keyword",
    "Events",
    "Basic DOM Operations",
  ],
  "ES6+ Features": [
    "Arrow Functions",
    "Template Literals",
    "Destructuring",
    "Spread/Rest Operators",
    "Classes",
    "Modules",
    "Promises",
    "async/await",
    "Generators",
    "Map & Set",
  ],
  "DOM Manipulation": [
    "Selectors",
    "Event Handling",
    "DOM Traversal",
    "Creating Elements",
    "Modifying Elements",
    "Event Delegation",
    "DOM Animation",
    "Form Handling",
    "Custom Events",
    "Shadow DOM",
  ],
  "Async Programming": [
    "Callbacks",
    "Promises",
    "async/await",
    "Event Loop",
    "Web Workers",
    "Service Workers",
    "Fetch API",
    "WebSocket",
    "Server-Sent Events",
    "RxJS",
  ],
  "Object-Oriented JavaScript": [
    "Prototypes",
    "Classes",
    "Inheritance",
    "Encapsulation",
    "Polymorphism",
    "Constructor Functions",
    "Instance Methods",
    "Static Methods",
    "Private Fields",
    "Mixins",
  ],
  "Functional Programming": [
    "Pure Functions",
    "Immutability",
    "Higher-Order Functions",
    "Closures",
    "Currying",
    "Composition",
    "Recursion",
    "Map/Reduce/Filter",
    "Functors",
    "Monads",
  ],
  "Error Handling": [
    "try/catch",
    "Error Types",
    "Custom Errors",
    "Error Propagation",
    "Promise Error Handling",
    "Global Error Handling",
    "Debugging Techniques",
    "Error Logging",
    "Error Boundaries",
    "Recovery Strategies",
  ],
  "Data Structures": [
    "Arrays",
    "Objects",
    "Sets",
    "Maps",
    "Linked Lists",
    "Stacks",
    "Queues",
    "Trees",
    "Graphs",
    "Hash Tables",
  ],
  Algorithms: [
    "Sorting",
    "Searching",
    "Recursion",
    "Dynamic Programming",
    "Graph Algorithms",
    "Tree Traversal",
    "String Manipulation",
    "Array Operations",
    "Time Complexity",
    "Space Complexity",
  ],
  "Design Patterns": [
    "Singleton",
    "Factory",
    "Observer",
    "Module",
    "Decorator",
    "Strategy",
    "Command",
    "Facade",
    "Proxy",
    "MVC/MVVM",
  ],
  "Performance Optimization": [
    "Code Splitting",
    "Lazy Loading",
    "Caching",
    "Memory Management",
    "Virtual DOM",
    "Debouncing",
    "Throttling",
    "Web Workers",
    "Resource Loading",
    "Performance Metrics",
  ],
  Testing: [
    "Unit Testing",
    "Integration Testing",
    "E2E Testing",
    "Jest",
    "Mocha",
    "Cypress",
    "Test Coverage",
    "Mocking",
    "TDD",
    "BDD",
  ],
  Debugging: [
    "Console Methods",
    "Debugger Statement",
    "Chrome DevTools",
    "Source Maps",
    "Performance Profiling",
    "Memory Leaks",
    "Network Debugging",
    "Error Tracking",
    "Logging",
    "Testing Tools",
  ],
  "Browser APIs": [
    "LocalStorage",
    "SessionStorage",
    "IndexedDB",
    "Cookies",
    "Geolocation",
    "Canvas",
    "WebGL",
    "Audio API",
    "Video API",
    "File API",
  ],
  "Node.js": [
    "Modules",
    "File System",
    "Streams",
    "Events",
    "HTTP/HTTPS",
    "Express",
    "Database Integration",
    "Authentication",
    "Middleware",
    "API Development",
  ],
  Security: [
    "XSS Prevention",
    "CSRF Protection",
    "Input Validation",
    "Authentication",
    "Authorization",
    "Secure Headers",
    "Content Security Policy",
    "HTTPS",
    "SQL Injection",
    "Security Headers",
  ],
  "Best Practices": [
    "Code Style",
    "Documentation",
    "Version Control",
    "Code Review",
    "Clean Code",
    "Refactoring",
    "Design Principles",
    "Performance",
    "Security",
    "Accessibility",
  ],
  Frameworks: [
    "React",
    "Vue",
    "Angular",
    "Svelte",
    "Next.js",
    "Nuxt.js",
    "Express",
    "NestJS",
    "Electron",
    "React Native",
  ],
  "Build Tools": [
    "Webpack",
    "Babel",
    "Vite",
    "Rollup",
    "ESLint",
    "Prettier",
    "npm Scripts",
    "Grunt",
    "Gulp",
    "TypeScript",
  ],
  "Package Management": [
    "npm",
    "yarn",
    "pnpm",
    "package.json",
    "Dependencies",
    "DevDependencies",
    "Versioning",
    "Scripts",
    "Workspaces",
    "Monorepos",
  ],
  React: [
    "Components & Props",
    "State & Lifecycle",
    "Hooks",
    "Context API",
    "React Router",
    "Redux",
    "Forms & Controlled Components",
    "Performance Optimization",
    "Error Boundaries",
    "Server-Side Rendering",
    "Testing React Apps",
    "Custom Hooks",
    "Component Patterns",
    "React Query",
    "Styling in React",
  ],
  Python: [
    "Python Basics",
    "Data Types & Variables",
    "Control Structures",
    "Functions & Lambda",
    "Lists & Tuples",
    "Dictionaries & Sets",
    "Object-Oriented Programming",
    "Modules & Packages",
    "File Handling",
    "Exception Handling",
    "List Comprehension",
    "Decorators & Generators",
    "Virtual Environments",
    "Libraries & Frameworks",
    "Testing in Python",
  ],
  Docker: [
    "Docker Basics",
    "Containers & Images",
    "Dockerfile",
    "Docker Compose",
    "Container Management",
    "Docker Networking",
    "Docker Volumes",
    "Docker Security",
    "Docker Registry",
    "Multi-Container Apps",
    "Docker Swarm",
    "Docker with CI/CD",
    "Docker Best Practices",
    "Docker Monitoring",
    "Container Orchestration",
  ],
  Django: [
    "Django Basics",
    "MVT Architecture",
    "URL Routing",
    "Views & Templates",
    "Models & ORM",
    "Forms & Validation",
    "Authentication & Authorization",
    "Admin Interface",
    "Database Management",
    "Static & Media Files",
    "REST Framework",
    "Testing in Django",
    "Security Best Practices",
    "Deployment",
    "Performance Optimization",
  ],
};

export const DIFFICULTY_LEVELS = ["Beginner", "Intermediate", "Advanced"];

export const ARTICLE_STATUS = {
  DRAFT: "draft",
  PUBLISHED: "published",
  ARCHIVED: "archived",
};

// Utility function to format category names for API calls
export const formatCategoryForAPI = (category) => {
  return category.toLowerCase().replace(/[^a-z0-9]/g, "_");
};

// Get topics for a specific category
export const getTopicsForCategory = (category) => {
  return TOPICS[category] || [];
};

// Check if a category exists
export const isCategoryValid = (category) => {
  return CATEGORIES.includes(category);
};

// Updated fetch function with category validation
export const fetchArticlesByCategory = async (category) => {
  try {
    if (!isCategoryValid(category)) {
      throw new Error(`Invalid category: ${category}`);
    }

    const formattedCategory = formatCategoryForAPI(category);
    const response = await fetch(
      `http://localhost:5000/api/articles/${formattedCategory}`
    );

    if (!response.ok) {
      throw new Error(`Failed to fetch articles for category: ${category}`);
    }

    const articles = await response.json();
    return {
      category,
      topics: getTopicsForCategory(category),
      articles,
    };
  } catch (error) {
    console.error("Error fetching articles:", error);
    throw error;
  }
};
